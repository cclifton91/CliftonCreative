---
//import
import Button from "@/components/ui/button.astro"
---

<form
	name="contactForm"
	method="POST"
	class="form-validate js-form-validate"
	netlify-honeypot="bot-field"
	data-netlify="true">
	<fieldset class="mb-5 lg:mb-8">
		<legend class="mb-4 text-contrast-higher font-heading text-xl text-quaternary">Project Request</legend>
		<!--- Honeypot -->
		<p class="hidden">
			<label>
				Don’t fill this out if you’re human: <input name="bot-field" />
			</label>
		</p>
		<!--Form Fields -->
		<div class="mb-2 lg:mb-3">
			<ul class="flex flex-wrap gap-3 js-choice-tags lg:mb-4 font-body">
				<li>
					<label
						class="inline-flex items-center py-3 px-4 hover:text-secondary shadow-[0_0_0_2px_#333330] cursor-pointer select-none text-[0.9375rem] transition-all duration-200 hover:shadow-[0_0_0_2px_#776288] active:shadow-[0_0_0_2px_#4338ca,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] focus-within:shadow-[0_0_0_2px_#8d3f2e,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] [&.choice-tag--checked]:shadow-[0_0_0_2px_#8d3f2e] focus-within:[&:not(.choice-tag--checked)]:shadow-[0_0_0_1px_#111827,_0_0_0_3px_hsl(221_39%_11%_/_0.2)] [&.choice-tag--checked]:bg-quaternary/[0.08] choice-tag--checkbox js-choice-tag"
						for="designBox">
						<input class="sr-only peer" type="checkbox" id="designBox" />

						<svg
							class="choice-tag__icon text-dark peer-checked:text-quaternary text-[16px] mr-2 h-[1em] w-[1em] inline-block fill-current shrink-none leading-none"
							viewBox="0 0 16 16"
							aria-hidden="true"
							><g
								class="choice-tag__icon-group"
								fill="none"
								stroke="currentColor"
								stroke-linecap="round"
								stroke-miterlimit="10"
								stroke-width="2"
								><line x1="-6" y1="8" x2="8" y2="8"></line><line x1="8" y1="8" x2="22" y2="8"></line><line
									x1="8"
									y1="2"
									x2="8"
									y2="14"></line></g
							></svg
						>

						<span class="leading-tight">Design</span>
					</label>
				</li>

				<li>
					<label
						class="inline-flex items-center py-3 px-4 hover:text-secondary shadow-[0_0_0_2px_#333330] cursor-pointer select-none text-[0.9375rem] transition-all duration-200 hover:shadow-[0_0_0_2px_#776288] active:shadow-[0_0_0_2px_#4338ca,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] focus-within:shadow-[0_0_0_2px_#8d3f2e,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] [&.choice-tag--checked]:shadow-[0_0_0_2px_#8d3f2e] focus-within:[&:not(.choice-tag--checked)]:shadow-[0_0_0_1px_#111827,_0_0_0_3px_hsl(221_39%_11%_/_0.2)] [&.choice-tag--checked]:bg-quaternary/[0.08] choice-tag--checkbox js-choice-tag"
						for="developmentBox">
						<input class="sr-only peer" type="checkbox" id="developmentBox" />

						<svg
							class="choice-tag__icon text-dark peer-checked:text-quaternary text-[16px] mr-2 h-[1em] w-[1em] inline-block fill-current shrink-none leading-none"
							viewBox="0 0 16 16"
							aria-hidden="true"
							><g
								class="choice-tag__icon-group"
								fill="none"
								stroke="currentColor"
								stroke-linecap="round"
								stroke-miterlimit="10"
								stroke-width="2"
								><line x1="-6" y1="8" x2="8" y2="8"></line><line x1="8" y1="8" x2="22" y2="8"></line><line
									x1="8"
									y1="2"
									x2="8"
									y2="14"></line></g
							></svg
						>

						<span class="leading-tight">Development</span>
					</label>
				</li>

				<li>
					<label
						class="inline-flex items-center py-3 px-4 hover:text-secondary shadow-[0_0_0_2px_#333330] cursor-pointer select-none text-[0.9375rem] transition-all duration-200 hover:shadow-[0_0_0_2px_#776288] active:shadow-[0_0_0_2px_#4338ca,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] focus-within:shadow-[0_0_0_2px_#8d3f2e,_0_0_0_4px_hsla(245_58%_51%_/_0.2)] [&.choice-tag--checked]:shadow-[0_0_0_2px_#8d3f2e] focus-within:[&:not(.choice-tag--checked)]:shadow-[0_0_0_1px_#111827,_0_0_0_3px_hsl(221_39%_11%_/_0.2)] [&.choice-tag--checked]:bg-quaternary/[0.08] choice-tag--checkbox js-choice-tag"
						for="brandingBox">
						<input class="sr-only peer" type="checkbox" id="brandingBox" />

						<svg
							class="choice-tag__icon text-dark peer-checked:text-quaternary text-[16px] mr-2 h-[1em] w-[1em] inline-block fill-current shrink-none leading-none"
							viewBox="0 0 16 16"
							aria-hidden="true"
							><g
								class="choice-tag__icon-group"
								fill="none"
								stroke="currentColor"
								stroke-linecap="round"
								stroke-miterlimit="10"
								stroke-width="2"
								><line x1="-6" y1="8" x2="8" y2="8"></line><line x1="8" y1="8" x2="22" y2="8"></line><line
									x1="8"
									y1="2"
									x2="8"
									y2="14"></line></g
							></svg
						>

						<span class="leading-tight">Branding</span>
					</label>
				</li>
			</ul>

			<div class="grid grid-cols-12 gap-2 lg:gap-3">
				<div class="col-span-12 form-validate__input-wrapper js-form-validate__input-wrapper">
					<label class="inline-block text-md mb-1.5 lg:mb-2 text-quaternary font-subheading" for="email">Email</label>
					<input
						class="appearance-none bg-light border-2 border-quaternary py-2 px-3 text-[1em] leading-tight transition duration-200 outline-none placeholder:opacity-100 placeholder:text-gray-400 focus-within:border-secondary w-full mb-4"
						type="email"
						name="email"
						id="email"
						required
					/>
					<div
						role="alert"
						class="form-validate__error-msg bg-red-600/20 px-2 lg:px-3 py-1.5 lg:py-2 rounded text-xs text-gray-900 mt-1.5 lg:mt-2">
						<p>Provide a valid email address.</p>
					</div>

					<div class="col-span-12 lg:col-span-6 form-validate__input-wrapper js-form-validate__input-wrapper">
						<label class="inline-block text-md mb-1.5 lg:mb-2 text-quaternary font-subheading" for="password"
							>Phone Number</label
						>
						<input
							class="appearance-none bg-light border-2 border-quaternary py-2 px-3 text-[1em] leading-tight transition duration-200 outline-none placeholder:opacity-100 placeholder:text-gray-400 focus-within:border-secondary w-full"
							type="tel"
							name="phone"
							id="phone"
							data-validate="hasNumber"
						/>
						<div
							role="alert"
							class="form-validate__error-msg bg-red-600/20 px-2 lg:px-3 py-1.5 lg:py-2 rounded text-xs text-gray-900 mt-1.5 lg:mt-2">
							<p>Must include a number.</p>
							<p class="text-xs text-gray-500 mt-1.5 lg:mt-2">Include a number.</p>
						</div>
					</div>
				</div>

				<div class="col-span-12 form-validate__input-wrapper js-form-validate__input-wrapper">
					<label class="inline-block text-md mb-1.5 lg:mb-2 text-quaternary font-subheading" for="textarea"
						>Message</label
					>
					<textarea
						class="appearance-none bg-light border-2 border-quaternary py-2 px-3 text-[1em] leading-tight transition duration-200 outline-none placeholder:opacity-100 placeholder:text-gray-400 focus-within:border-secondary w-full"
						name="textarea"
						id="textarea"
						minlength="10"
						required></textarea>
					<div
						role="alert"
						class="form-validate__error-msg bg-red-600/20 px-2 lg:px-3 py-1.5 lg:py-2 rounded text-xs text-gray-900 mt-1.5 lg:mt-2">
						<p>Must be at least 10 characters.</p>
						<p class="text-xs text-gray-500 mt-1.5 lg:mt-2">At least 10 characters.</p>
					</div>
				</div>

				<div class="col-span-12 pt-3 lg:pt-5 border-t border-gray-300">
					<Button label="Send" type="submit" variant="primary" />
				</div>
			</div>
		</div>
	</fieldset>
</form>

<!-- Styling -->
<style>
	.form-validate__error-msg {
		display: none;
	}
	.form-validate__input-wrapper--error .form-validate__error-msg {
		display: block;
	}

	.choice-tag--checkbox input:checked + .choice-tag__icon .choice-tag__icon-group :nth-child(1) {
		stroke-dashoffset: 23;
		transform: translateX(-2px) translateY(4px) rotate(45deg);
	}

	.choice-tag--checkbox input:checked + .choice-tag__icon .choice-tag__icon-group :nth-child(2) {
		stroke-dashoffset: 5;
		transform: translateX(-2px) translateY(4px) rotate(-45deg);
	}

	.choice-tag--checkbox input:checked + .choice-tag__icon .choice-tag__icon-group :nth-child(3) {
		transition: none;
		stroke-dashoffset: 16;
		opacity: 0;
	}

	.choice-tag--radio input:checked + .choice-tag__icon .choice-tag__icon-group :nth-child(2) {
		transform: scale(1);
	}

	.choice-tag__icon-group * {
		transform-origin: 8px 8px;
	}

	.choice-tag--checkbox .choice-tag__icon-group {
		stroke-width: 2px;
	}

	.choice-tag--checkbox .choice-tag__icon-group * {
		stroke-dasharray: 16;
	}

	.choice-tag--checkbox .choice-tag__icon-group :nth-child(1),
	.choice-tag--checkbox .choice-tag__icon-group :nth-child(2) {
		transition:
			transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
			stroke-dashoffset 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
	}

	.choice-tag--checkbox .choice-tag__icon-group :nth-child(1) {
		stroke-dashoffset: 24;
	}

	.choice-tag--checkbox .choice-tag__icon-group :nth-child(2) {
		stroke-dashoffset: 10;
	}

	.choice-tag--checkbox .choice-tag__icon-group :nth-child(3) {
		transition: stroke-dashoffset 0.3s;
		stroke-dashoffset: 0;
	}

	.choice-tag--radio .choice-tag__icon-group :nth-child(1) {
		stroke-width: 1px;
	}

	.choice-tag--radio .choice-tag__icon-group :nth-child(2) {
		transform: scale(0);
		transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
	}
</style>

<!--Javascript -->
<script>
	;(function () {
		var ChoiceTags = function (element: HTMLElement) {
			this.element = element
			this.labels = this.element.getElementsByClassName("js-choice-tag")
			this.inputs = getChoiceInput(this)
			this.isRadio = this.inputs[0].type.toString() == "radio"
			this.checkedClass = "choice-tag--checked"
			initChoiceTags(this)
			initChoiceTagEvent(this)
		}

		function getChoiceInput(element: any) {
			var inputs: HTMLInputElement[] = []
			for (var i = 0; i < element.labels.length; i++) {
				inputs.push(element.labels[i].getElementsByTagName("input")[0])
			}
			return inputs
		}

		function initChoiceTags(element: any) {
			// if tag is selected by default - add checkedClass to the label element
			for (var i = 0; i < element.inputs.length; i++) {
				element.labels[i].classList.toggle(element.checkedClass, element.inputs[i].checked)
			}
		}

		function initChoiceTagEvent(element: any) {
			element.element.addEventListener("change", function (event: Event) {
				var inputIndex = Array.prototype.indexOf.call(element.inputs, event.target)
				if (inputIndex < 0) return
				element.labels[inputIndex].classList.toggle(element.checkedClass, (event.target as HTMLInputElement).checked)
				if (element.isRadio && (event.target as HTMLInputElement).checked) resetRadioTags(element, inputIndex)
			})
		}

		function resetRadioTags(element: any, index: number) {
			// when a radio input is checked - reset all the others
			for (var i = 0; i < element.labels.length; i++) {
				if (i != index) element.labels[i].classList.remove(element.checkedClass)
			}
		}

		;(window as any).ChoiceTags = ChoiceTags

		//initialize the ChoiceTags objects
		var choiceTags = document.getElementsByClassName("js-choice-tags")
		if (choiceTags.length > 0) {
			for (var i = 0; i < choiceTags.length; i++) {
				;(function (i) {
					new (ChoiceTags as any)(choiceTags[i] as HTMLElement)
				})(i)
			}
		}
	})()
</script>
